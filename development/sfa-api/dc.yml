apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: {}
  generation: 1
  labels:
    app: sfa-api
  name: sfa-api
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: sfa-api
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: sfa-api
        deploymentconfig: sfa-api
    spec:
      containers:
      - env:
        - name: APP_MODULE
          value: sfa_api:create_app()
        - name: GUNICORN_CMD_ARGS
          value: --ssl-version=5 --certfile=/certs/tls.crt --keyfile=/certs/tls.key
            -k gevent --keep-alive=5 -w 8 --access-logformat '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" "%({X-Forwarded-For}i)s"'
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              key: mysql-host
              name: sfa-api-mysql-config
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: mysql-user
              name: sfa-api-mysql-config
        - name: MYSQL_PORT
          valueFrom:
            secretKeyRef:
              key: mysql-port
              name: sfa-api-mysql-config
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: sfa-api-mysql-config
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: mysql-database
              name: sfa-api-mysql-config
        - name: REDIS_SETTINGS
          value: '/redis/redis-config.py'
        - name: SENTRY_DSN
          value: {{ sentry_dsn }}
        image: sfa-api:{{ sfa_api_image_tag | default('latest') }}
        imagePullPolicy: Always
        name: sfa-api
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 1
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs
          name: cert-secret
        - mountPath: /redis
          name: redis-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cert-secret
        secret:
          defaultMode: 420
          secretName: sfa-api-svc-cert
      - name: redis-config
        secret:
          defaultMode: 420
          secretName: sfa-api-redis-config
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - sfa-api
      from:
        kind: ImageStreamTag
        name: sfa-api:{{ sfa_api_image_tag | default('latest') }}
    type: ImageChange
  - type: ConfigChange
